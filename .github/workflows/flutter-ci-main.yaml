name: Flutter CI/CD - Main

# Triggers for the workflow
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Clone the repository
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Installs the Temurin JDK (formerly AdoptOpenJDK)
          java-version: '17'

      # Set up cache for Flutter packages to speed up builds
      - name: Cache Flutter packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            **/build
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      # Install Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.24.3

      # Display Flutter version
      - run: flutter --version

      # Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Code analysis (Linting)
      - name: Analyze code
        run: flutter analyze

      # Check code formatting (optional but useful)
      - name: Check code formatting
        run: dart format --set-exit-if-changed .

      # Run unit tests
      - name: Run unit tests
        run: flutter test

      # Build APK in release mode
      - name: Build APK (Release)
        run: flutter build apk --release

      # iOS build only on macOS
      - name: Build iOS (Release)
        if: runner.os == 'macOS'
        run: flutter build ios --release --no-codesign

      # Upload artifact (APK)
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: apk-release
          path: build/app/outputs/flutter-apk/app-release.apk
